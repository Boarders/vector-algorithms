name:              vector-algorithms
version:           0.6
license:           BSD3
license-file:      LICENSE
author:            Dan Doel
maintainer:        Dan Doel <dan.doel@gmail.com>
homepage:          http://code.haskell.org/~dolio/
category:          Data
synopsis:          Efficient algorithms for vector arrays
description:       Efficient algorithms for vector arrays
build-type:        Simple
cabal-version:     >= 1.9.2

flag BoundsChecks
  Description: Enable bounds checking
  Default: True

flag UnsafeChecks
  Description: Enable bounds checking in unsafe operations at the cost of a
               significant performance penalty.
  Default: False

flag InternalChecks
  Description: Enable internal consistency checks at the cost of a
               significant performance penalty.
  Default: False

flag bench
  Description: Build a benchmarking program to test vector-algorithms
               performance
  default: False

source-repository head
  type:     darcs
  location: http://hub.darcs.net/dolio/vector-algorithms

library
    hs-source-dirs: src

    build-depends: base >= 3 && < 5,
                   vector >= 0.6 && < 0.11,
                   primitive >=0.3 && <0.6,
                   bytestring >= 0.9 && < 1.0

    exposed-modules:
        Data.Vector.Algorithms.Optimal
        Data.Vector.Algorithms.Insertion
        Data.Vector.Algorithms.Intro
        Data.Vector.Algorithms.Merge
        Data.Vector.Algorithms.Radix
        Data.Vector.Algorithms.Search
        Data.Vector.Algorithms.Heap
        Data.Vector.Algorithms.AmericanFlag

    other-modules:
        Data.Vector.Algorithms.Common

    extensions:
        BangPatterns,
        TypeOperators,
        Rank2Types,
        ScopedTypeVariables,
        FlexibleContexts,
        CPP

    ghc-options:
        -Odph
        -funbox-strict-fields

    include-dirs:
        include

    install-includes:
        vector.h

    if flag(BoundsChecks)
        cpp-options: -DVECTOR_BOUNDS_CHECKS

    if flag(UnsafeChecks)
        cpp-options: -DVECTOR_UNSAFE_CHECKS

    if flag(InternalChecks)
        cpp-options: -DVECTOR_INTERNAL_CHECKS

executable vector-algorithms-bench
  hs-source-dirs: bench

  if !flag(bench)
    buildable: False

  main-is: Main.hs

  build-depends: base, mersenne-random, vector, vector-algorithms, mtl
  ghc-options: -Wall -Odph

  extensions:
      Rank2Types

